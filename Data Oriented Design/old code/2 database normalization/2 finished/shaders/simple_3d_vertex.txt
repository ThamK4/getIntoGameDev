#version 430 core

layout (location=0) in vec3 vertexPos;

uniform mat4 view;
uniform mat4 projection;

struct Light {
    vec3 position;
    float padding;
    vec3 color;
    float strength;
};

layout(std430, binding = 0) buffer modelBuffer {
    mat4[] models;
};

layout(std430, binding = 1) buffer lightBuffer {
    Light[] lights;
};

out flat vec3 color;

void main()
{
    mat4 model = models[gl_InstanceID];
    color = lights[gl_InstanceID].color;
    gl_Position = projection * view * model * vec4(vertexPos, 1.0);
}